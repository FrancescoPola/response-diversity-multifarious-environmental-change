"0",""
"0","# Create new env data"
"0","new_data <- expand_grid(E1 = seq(15, 40, by= 0.5),"
"0","                        E2 = seq(0.01, 40, by= 0.5))"
"0",""
"0",""
"0","## fit GAMs and get predicted rates"
"0","names(df)"
"1","[1]"
"1"," ""SpeciesName""            "
"1"," ""temperature""            "
"1"," ""Phosphate_concentration"""
"1"," ""Replicate""              "
"1"," ""LOG10N0""                "
"1","
"
"1","[6]"
"1"," ""lag""                    "
"1"," ""LOG10Nmax""              "
"1"," ""mumax""                  "
"1","
"
"0","nested_gams <- df[,c(1:3,8)] %>% dplyr::rename(E1 = ""temperature"","
"0","                                               E2 = ""Phosphate_concentration"") %>% "
"0","  dplyr::mutate(E2 = as.numeric(gsub(""%"","""",as.character(E2)))) %>% "
"0","  nest(cols =-SpeciesName) %>% "
"0","  mutate("
"0","    gams = map(cols, ~ gam(mumax ~ te(E1, E2, k = c(5, 5)),"
"0","                           data = .x,"
"0","                           method = ""REML"")),"
"0","    predicted = map(gams, ~ predict(.x, newdata = new_data))"
"0","  )"
"0",""
"0",""
"0","# Get gams coefficients"
"0","coeff <- nested_gams %>% "
"0","  mutate(coefs = map(gams, tidy, conf.int = TRUE)) %>% "
"0","  unnest(coefs) %>% "
"0","  dplyr::select(c('SpeciesName', 'term', 'p.value'))"
"2","Confidence intervals only available for parametric terms.
"
"2","Confidence intervals only available for parametric terms.
"
"2","Confidence intervals only available for parametric terms.
"
"2","Confidence intervals only available for parametric terms.
"
"2","Confidence intervals only available for parametric terms.
"
"0","DT::datatable(coeff,"
"0","              filter=""top"")"
